
package com.ss.conversorMultiple.GUI;

import com.ss.conversorMultiple.GUI.errors.CurrencyError;
import com.ss.conversorMultiple.GUI.errors.QuantityError;
import com.ss.conversorMultiple.GUI.errors.TemperatureErrors.TemperatureError;
import com.ss.conversorMultiple.GUI.errors.TemperatureErrors.TemperatureCelsiusQuantityError;
import com.ss.conversorMultiple.GUI.errors.TemperatureErrors.TemperatureFahrenheitQuantityError;
import com.ss.conversorMultiple.GUI.errors.TemperatureErrors.TemperatureKelvinQuantityError;
import com.ss.conversorMultiple.Logica.Currency;
import com.ss.conversorMultiple.Logica.Temperature;


public class TemperatureMenu extends javax.swing.JFrame {

    /**
     * Creates new form CurrencyMenu
     */
    public TemperatureMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        currencyConvertTitle = new javax.swing.JLabel();
        selectLabel1 = new javax.swing.JLabel();
        temperatureCombo1 = new javax.swing.JComboBox<>();
        aceptButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        temperatureCombo2 = new javax.swing.JComboBox<>();
        selectLabel2 = new javax.swing.JLabel();
        convertCurrency = new javax.swing.JTextField();
        dataTextLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        quantityInput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(600, 400));
        jPanel1.setSize(new java.awt.Dimension(600, 400));

        currencyConvertTitle.setFont(new java.awt.Font("Chakra Petch", 1, 36)); // NOI18N
        currencyConvertTitle.setText("Conversor de Temperatura");

        selectLabel1.setFont(new java.awt.Font("Chakra Petch", 0, 13)); // NOI18N
        selectLabel1.setText("Seleccione una moneda");

        temperatureCombo1.setFont(new java.awt.Font("Chakra Petch", 0, 13)); // NOI18N
        temperatureCombo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Celsius (ºC)", "Fahrenheit (ºF)", "Kelvin (K)" }));
        temperatureCombo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temperatureCombo1ActionPerformed(evt);
            }
        });

        aceptButton.setFont(new java.awt.Font("Chakra Petch", 0, 13)); // NOI18N
        aceptButton.setText("Aceptar");
        aceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Chakra Petch", 0, 13)); // NOI18N
        backButton.setText("Volver");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        temperatureCombo2.setFont(new java.awt.Font("Chakra Petch", 0, 13)); // NOI18N
        temperatureCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));

        selectLabel2.setFont(new java.awt.Font("Chakra Petch", 0, 13)); // NOI18N
        selectLabel2.setText("Seleccione una moneda");

        convertCurrency.setEditable(false);
        convertCurrency.setFont(new java.awt.Font("Chakra Petch", 1, 24)); // NOI18N
        convertCurrency.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        convertCurrency.setText("0");

        dataTextLabel.setFont(new java.awt.Font("Chakra Petch", 0, 13)); // NOI18N
        dataTextLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dataTextLabel.setText(" ");

        quantityLabel.setFont(new java.awt.Font("Chakra Petch", 0, 13)); // NOI18N
        quantityLabel.setText("Cantidad a convertir");

        quantityInput.setFont(new java.awt.Font("Chakra Petch", 0, 13)); // NOI18N
        quantityInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quantityInput.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(selectLabel2)
                        .addGap(28, 28, 28)
                        .addComponent(temperatureCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(selectLabel1)
                        .addGap(28, 28, 28)
                        .addComponent(temperatureCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(95, 95, 95)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(quantityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(quantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(backButton)
                        .addGap(38, 38, 38)
                        .addComponent(aceptButton)
                        .addGap(198, 198, 198))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(currencyConvertTitle)
                        .addGap(64, 64, 64))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(convertCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(dataTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(currencyConvertTitle)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectLabel1)
                    .addComponent(temperatureCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityLabel))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selectLabel2)
                            .addComponent(temperatureCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(quantityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(76, 76, 76)
                .addComponent(dataTextLabel)
                .addGap(18, 18, 18)
                .addComponent(convertCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aceptButton)
                    .addComponent(backButton))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void aceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptButtonActionPerformed
        float result = 0.00F;
        float quantity = Float.parseFloat(quantityInput.getText());
        String temperature1 = String.valueOf(temperatureCombo1.getSelectedItem());
        String temperature2 = String.valueOf(temperatureCombo2.getSelectedItem());

        if(temperature1.compareTo("Seleccione") == 0 
                || temperature2.compareTo("Seleccione") == 0 ){

            TemperatureError error = new TemperatureError();
            error.setVisible(true);
            error.setLocationRelativeTo(null);
            error.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            
            return;

        }else if(temperature1.compareTo("Celsius (ºC)") == 0 
                && temperature2.compareTo("Fahrenheit (ºF)") == 0 ){

            Temperature temperature = new Temperature(quantity);
            
            result = temperature.CelsiusToFahrenheit();

        }else if(temperature1.compareTo("Celsius (ºC)") == 0 
                && temperature2.compareTo("Kelvin (K)") == 0 ){
            if(quantity < -273.15F){
                
              TemperatureCelsiusQuantityError error = new  TemperatureCelsiusQuantityError();
              
              error.setVisible(true);
              error.setLocationRelativeTo(null);
              error.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
              return;
            }else{

              Temperature temperature = new Temperature(quantity);
            
              result = temperature.CelsiusToKelvin();
            }
            
        }else if(temperature1.compareTo("Fahrenheit (ºF)") == 0 
                && temperature2.compareTo("Celsius (ºC)") == 0 ){

            Temperature temperature = new Temperature(quantity);
            
            result = temperature.FahrenheitToCelsius();
    
        }else if(temperature1.compareTo("Fahrenheit (ºF)") == 0 
                && temperature2.compareTo("Kelvin (K)") == 0 ){
            if(quantity < -459.67F){
              TemperatureFahrenheitQuantityError error = new  TemperatureFahrenheitQuantityError();
              
              error.setVisible(true);
              error.setLocationRelativeTo(null);
              error.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
              
              return;
              
            }else{

              Temperature temperature = new Temperature(quantity);
            
              result = temperature.FahrenheitToKelvin();
            }
            
        }else if(temperature1.compareTo("Kelvin (K)") == 0 
                && temperature2.compareTo("Celsius (ºC)") == 0 ){
            
            if(quantity < 0.00F){
              TemperatureKelvinQuantityError error = new  TemperatureKelvinQuantityError();
              
              error.setVisible(true);
              error.setLocationRelativeTo(null);
              error.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
              
              return;
            }else{

            Temperature temperature = new Temperature(quantity);
            
            result = temperature.KelvinToCelsius();
            }
            
        }else{
            if(quantity < 0.00F){
              TemperatureKelvinQuantityError error = new  TemperatureKelvinQuantityError();
              
              error.setVisible(true);
              error.setLocationRelativeTo(null);
              error.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
              
              return;
            }else {

              Temperature temperature = new Temperature(quantity);
            
              result = temperature.KelvinToFahrenheit();
            }
            
        
        }

            String response = String.valueOf(result);

            StringBuilder sb = new StringBuilder();

            sb.append(quantity)
            .append(" ")
            .append(temperature1)
            .append(" son equivalentes a ")
            .append(temperature2);

            dataTextLabel.setText(sb.toString());

            convertCurrency.setText(response);
        
    }//GEN-LAST:event_aceptButtonActionPerformed

    private void temperatureCombo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temperatureCombo1ActionPerformed
        String temperature = String.valueOf(temperatureCombo1.getSelectedItem());
        if(temperature.compareTo("Celsius (ºC)") == 0){
            temperatureCombo2.removeAllItems();
            temperatureCombo2.addItem("Seleccione");
            temperatureCombo2.addItem("Fahrenheit (ºF)");
            temperatureCombo2.addItem("Kelvin (K)");
            
        }else if (temperature.compareTo("Fahrenheit (ºF)") == 0){
            temperatureCombo2.removeAllItems();
            temperatureCombo2.addItem("Seleccione");
            temperatureCombo2.addItem("Celsius (ºC)");
            temperatureCombo2.addItem("Kelvin (K)");
            
        }else if (temperature.compareTo("Kelvin (K)") == 0){
            temperatureCombo2.removeAllItems();
            temperatureCombo2.addItem("Seleccione");
            temperatureCombo2.addItem("Celsius (ºC)");
            temperatureCombo2.addItem("Fahrenheit (ºF)");
            
        }else{
            temperatureCombo2.removeAllItems();
            temperatureCombo2.addItem("Seleccione");
        }
    }//GEN-LAST:event_temperatureCombo1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField convertCurrency;
    private javax.swing.JLabel currencyConvertTitle;
    private javax.swing.JLabel dataTextLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField quantityInput;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JLabel selectLabel1;
    private javax.swing.JLabel selectLabel2;
    private javax.swing.JComboBox<String> temperatureCombo1;
    private javax.swing.JComboBox<String> temperatureCombo2;
    // End of variables declaration//GEN-END:variables
}
